<main x-data="projectsComponent()" class="glass-effect rounded-3xl p-12 shadow-2xl">
    <!-- Header Section -->
    <div class="flex justify-between items-center mb-12">
        <div>
            <h1 class="text-5xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 bg-clip-text text-transparent mb-2">
                Dashboard
            </h1>
            <p class="text-gray-600 text-lg">Manage your serverless projects</p>
        </div>

        <button x-data="logoutButton()" @click="await logout()" type="button"
                class="group relative px-6 py-3 bg-gradient-to-r from-red-500 to-pink-600 rounded-2xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 text-white font-semibold">
            <span class="relative z-10 flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                </svg>
                Logout
            </span>
        </button>
    </div>

    <!-- Create Project Section -->
    <div class="mb-12">
        <div x-data="createProjectForm()">
            <button @click="open = true"
                    class="group relative px-8 py-4 bg-gradient-to-r from-emerald-500 to-teal-600 rounded-2xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 text-white font-semibold text-lg">
                <span class="relative z-10 flex items-center gap-3">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                    Create New Project
                </span>
            </button>

            <template x-teleport="body">
                <div x-show="open" x-transition.opacity @click.self="open = false" style="display: none;"
                     class="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4">
                    <div x-show="open" x-transition @keydown.escape.window="open = false"
                         class="glass-effect rounded-3xl shadow-2xl max-w-md w-full p-8 relative">
                        <form @submit.prevent="await create(); await loadProjects()">
                            <div class="flex justify-between items-center border-b border-gray-200 pb-6 mb-6">
                                <h2 class="text-2xl font-bold text-gray-800">Create New Project</h2>
                                <button @click="open = false" type="button"
                                        class="text-gray-400 hover:text-gray-600 transition-colors p-2 hover:bg-gray-100 rounded-full">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M6 18L18 6M6 6l12 12"></path>
                                    </svg>
                                </button>
                            </div>

                            <div class="space-y-6">
                                <div class="space-y-2">
                                    <label for="create-project-name" class="text-sm font-semibold text-gray-700">Project
                                        Name</label>
                                    <input x-model="name" type="text" id="create-project-name"
                                           placeholder="Enter project name"
                                           class="w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-200 bg-white/50">
                                </div>

                                <p x-show="error" x-text="error"
                                   class="text-red-500 text-sm bg-red-50 p-3 rounded-lg"></p>
                            </div>

                            <div class="mt-8 flex gap-4">
                                <button @click="open = false" type="button"
                                        class="flex-1 px-6 py-3 bg-gray-100 text-gray-700 rounded-xl hover:bg-gray-200 transition-colors duration-200 font-medium">
                                    Cancel
                                </button>
                                <button type="submit"
                                        class="flex-1 px-6 py-3 bg-gradient-to-r from-emerald-500 to-teal-600 text-white rounded-xl hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-200 font-semibold">
                                    Create Project
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </template>
        </div>
    </div>

    <!-- Projects Section -->
    <div x-init="await loadProjects()">
        <div class="flex items-center gap-4 mb-8">
            <div class="flex items-center gap-3">
                <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center">
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                    </svg>
                </div>
                <h2 class="text-3xl font-bold text-gray-800">Your Projects</h2>
            </div>
            <div class="flex-1 h-px bg-gradient-to-r from-gray-200 to-transparent"></div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <template x-for="project in projects">
                <div class="group bg-white/50 backdrop-blur-sm rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-white/20 hover:border-white/40">
                    <div class="flex items-center justify-between mb-4">
                        <div class="w-12 h-12 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-xl flex items-center justify-center">
                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                        </div>
                        <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                    </div>

                    <h3 class="text-xl font-semibold text-gray-800 mb-2" x-text="project.name"></h3>

                    <a :href="'/project/' + project.id"
                       class="inline-flex items-center gap-2 text-emerald-600 hover:text-emerald-700 font-medium transition-colors duration-200 group-hover:gap-3">
                        <span>Open Project</span>
                        <svg class="w-4 h-4 transition-transform duration-200 group-hover:translate-x-1" fill="none"
                             stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M9 5l7 7-7 7"></path>
                        </svg>
                    </a>
                </div>
            </template>

            <!-- Empty state -->
            <div x-show="projects.length === 0" class="col-span-full text-center py-12">
                <div class="w-20 h-20 bg-gradient-to-br from-gray-300 to-gray-400 rounded-2xl mx-auto mb-6 flex items-center justify-center">
                    <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                    </svg>
                </div>
                <h3 class="text-xl font-semibold text-gray-600 mb-2">No projects yet</h3>
                <p class="text-gray-500">Create your first serverless project to get started</p>
            </div>
        </div>
    </div>
</main>

<script>
    function logoutButton() {
        return {
            async logout() {
                try {
                    let res = await fetch("/api/logout", {
                        method: "POST",
                        headers: {"Content-Type": "application/json"},
                    })

                    if (!res.ok) {
                        let msg = await res.text()
                        throw new Error(msg || "Logout failed")
                    }

                    window.location.href = "/"
                } catch (err) {
                    console.log("logout", err)
                }
            },
        }
    }

    function projectsComponent() {
        return {
            projects: [],

            async loadProjects() {
                this.projects = await (await fetch("/api/project")).json()
            },
        }
    }

    function createProjectForm() {
        return {
            open: false,
            name: "",
            error: "",

            async create() {
                this.error = ""

                if (this.name === "") {
                    this.error = "Empty name"
                    return
                }

                try {
                    let res = await fetch("/api/project", {
                        method: "POST",
                        headers: {"Content-Type": "application/json"},
                        body: JSON.stringify({
                            name: this.name,
                        }),
                    })

                    if (!res.ok) {
                        let msg = await res.text()
                        throw new Error(msg || "Creation failed")
                    }

                    this.open = false
                    this.name = ""
                } catch (err) {
                    this.error = err.message
                }
            },
        }
    }

</script>
