<main class="glass-effect rounded-3xl p-12 shadow-2xl">
    <!-- Hero Section -->
    <div class="text-center mb-12">
        <div class="floating-animation mb-8">
            <div class="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl shadow-lg pulse-glow">
                <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                </svg>
            </div>
        </div>

        <h1 class="text-6xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-600 bg-clip-text text-transparent mb-6 leading-tight">
            Lithium
        </h1>

        <h2 class="text-2xl text-gray-700 font-medium mb-4">
            Create serverless backend with WASM modules
        </h2>

        <p class="text-lg text-gray-600 font-light">
            Batteries included! âš¡
        </p>
    </div>

    <!-- Action Buttons -->
    <div class="flex flex-col sm:flex-row gap-6 items-center justify-center">
        <div x-data="loginForm()">
            <button @click="open = true"
                    class="group relative px-8 py-4 bg-gradient-to-r from-emerald-500 to-teal-600 rounded-2xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 text-white font-semibold text-lg cursor-pointer">
                <span class="relative z-10 flex items-center gap-3">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
                    </svg>
                    Login
                </span>
            </button>

            <template x-teleport="body">
                <div x-show="open" x-transition.opacity @click.self="open = false" style="display: none;"
                     class="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4">
                    <div x-show="open" x-transition @keydown.escape.window="open = false"
                         class="glass-effect rounded-3xl shadow-2xl max-w-md w-full p-8 relative">
                        <form @submit.prevent="await login()">
                            <div class="flex justify-between items-center border-b border-gray-200 pb-6 mb-6">
                                <h2 class="text-2xl font-bold text-gray-800">Welcome Back</h2>
                                <button @click="open = false" type="button"
                                        class="text-gray-400 hover:text-gray-600 transition-colors p-2 hover:bg-gray-100 rounded-full">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M6 18L18 6M6 6l12 12"></path>
                                    </svg>
                                </button>
                            </div>

                            <div class="space-y-6">
                                <div class="space-y-2">
                                    <label for="login-email" class="text-sm font-semibold text-gray-700">Email
                                        Address</label>
                                    <input x-model="email" type="email" id="login-email" placeholder="Enter your email"
                                           class="w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white/50">
                                </div>

                                <div class="space-y-2">
                                    <label for="login-password"
                                           class="text-sm font-semibold text-gray-700">Password</label>
                                    <input x-model="password" type="password" id="login-password"
                                           placeholder="Enter your password"
                                           class="w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white/50">
                                </div>

                                <p x-show="error" x-text="error"
                                   class="text-red-500 text-sm bg-red-50 p-3 rounded-lg"></p>
                            </div>

                            <div class="mt-8 flex gap-4">
                                <button @click="open = false" type="button"
                                        class="flex-1 px-6 py-3 bg-gray-100 text-gray-700 rounded-xl hover:bg-gray-200 transition-colors duration-200 font-medium cursor-pointer">
                                    Cancel
                                </button>
                                <button type="submit"
                                        class="flex-1 px-6 py-3 bg-gradient-to-r from-emerald-500 to-teal-600 text-white rounded-xl hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-200 font-semibold cursor-pointer">
                                    Sign In
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </template>
        </div>

        <div class="text-gray-500 font-medium">or</div>

        <div x-data="registerForm()">
            <button @click="open = true"
                    class="group relative px-8 py-4 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-2xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 text-white font-semibold text-lg cursor-pointer">
                <span class="relative z-10 flex items-center gap-3">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>
                    </svg>
                    Register
                </span>
            </button>

            <template x-teleport="body">
                <div x-show="open" x-transition.opacity @click.self="open = false" style="display: none;"
                     class="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4">
                    <div x-show="open" x-transition @keydown.escape.window="open = false"
                         class="glass-effect rounded-3xl shadow-2xl max-w-md w-full p-8 relative">
                        <form @submit.prevent="await register()">
                            <div class="flex justify-between items-center border-b border-gray-200 pb-6 mb-6">
                                <h2 class="text-2xl font-bold text-gray-800">Create Account</h2>
                                <button @click="open = false" type="button"
                                        class="text-gray-400 hover:text-gray-600 transition-colors p-2 hover:bg-gray-100 rounded-full">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M6 18L18 6M6 6l12 12"></path>
                                    </svg>
                                </button>
                            </div>

                            <div class="space-y-6">
                                <div class="space-y-2">
                                    <label for="register-email" class="text-sm font-semibold text-gray-700">Email
                                        Address</label>
                                    <input x-model="email" type="email" id="register-email"
                                           placeholder="Enter your email"
                                           class="w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white/50">
                                </div>

                                <div class="space-y-2">
                                    <label for="register-password"
                                           class="text-sm font-semibold text-gray-700">Password</label>
                                    <input x-model="password" type="password" id="register-password"
                                           placeholder="Create a password"
                                           class="w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white/50">
                                </div>

                                <div class="space-y-2">
                                    <label for="register-confirm-password" class="text-sm font-semibold text-gray-700">Confirm
                                        Password</label>
                                    <input x-model="confirmPassword" type="password" id="register-confirm-password"
                                           placeholder="Confirm your password"
                                           class="w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-white/50">
                                </div>

                                <p x-show="error" x-text="error"
                                   class="text-red-500 text-sm bg-red-50 p-3 rounded-lg"></p>
                            </div>

                            <div class="mt-8 flex gap-4">
                                <button @click="open = false" type="button"
                                        class="flex-1 px-6 py-3 bg-gray-100 text-gray-700 rounded-xl hover:bg-gray-200 transition-colors duration-200 font-medium cursor-pointer">
                                    Cancel
                                </button>
                                <button type="submit"
                                        class="flex-1 px-6 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-xl hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-200 font-semibold cursor-pointer">
                                    Create Account
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </template>
        </div>
    </div>
</main>

<script>
    function loginForm() {
        return {
            open: false,
            email: "",
            password: "",
            error: "",

            async login() {
                this.error = ""

                if (this.email === "" || this.password === "") {
                    this.error = "Empty email or password"
                    return
                }

                try {
                    let res = await fetch("/api/login", {
                        method: "POST",
                        headers: {"Content-Type": "application/json"},
                        body: JSON.stringify({
                            email: this.email,
                            password: this.password,
                        }),
                    })

                    if (!res.ok) {
                        let msg = await res.text()
                        throw new Error(msg || "Login failed")
                    }

                    let data = await res.json()
                    console.log("Logged in:", data)

                    this.open = false
                    window.location.href = "/dashboard"
                } catch (err) {
                    this.error = err.message
                }
            },
        }
    }

    function registerForm() {
        return {
            open: false,
            email: "",
            password: "",
            confirmPassword: "",
            error: "",

            async register() {
                this.error = ""

                if (this.email === "" || this.password === "") {
                    this.error = "Empty email or password"
                    return
                }

                if (this.password !== this.confirmPassword) {
                    this.error = "Passwords do not match"
                    return
                }

                try {
                    let res = await fetch("/api/register", {
                        method: "POST",
                        headers: {"Content-Type": "application/json"},
                        body: JSON.stringify({
                            email: this.email,
                            password: this.password,
                        }),
                    })

                    if (!res.ok) {
                        let msg = await res.text()
                        throw new Error(msg || "Registration failed")
                    }

                    let data = await res.json()
                    console.log("Logged in:", data)

                    this.open = false
                    window.location.href = "/dashboard"
                } catch (err) {
                    this.error = err.message
                }
            },
        }
    }
</script>
